/***********************************************************************************
	OUTPUT - BUTTON
***********************************************************************************/


/***********************************************************************************
	DEFAULT MAP FUNCTIONS
***********************************************************************************/

@function responslr-button-exists($name) {
	@return map-has-key($responslr-buttons, $name);
}

@function responslr-button($name: null) {
	$return-button: ();

	@if $name == null {
		$name: $responslr-buttons-default;
	}

	@if responslr-button-exists($name) {
		$return-button: map-get($responslr-buttons, $name);
	}

	@return $return-button;
}


/***********************************************************************************
	MAP VALUE FUNCTIONS
***********************************************************************************/

@function responslr-button-height($name: null) {
	$return-height: map-get(responslr-button($name), height);

	@if $return-height == null {
		$return-height: $responslr-buttons-default-height;
	}

	@return $return-height;
}

@function responslr-button-padding($name: null) {
	$return-padding: map-get(responslr-button($name), padding);

	@if $return-padding == null {
		$return-padding: $responslr-buttons-default-padding;
	}

	@return $return-padding;
}

@function responslr-button-border-radius($name: null) {
	$return-border-radius: map-get(responslr-button($name), border-radius);

	@if $return-border-radius == null {
		$return-border-radius: $responslr-buttons-default-border-radius;
	}

	@return $return-border-radius;
}


/***********************************************************************************
	MIXINS
***********************************************************************************/

@mixin responslr-button-default() {
	display: inline-block;
	cursor: pointer;
}

@mixin responslr-button-inactive() {
	background-color: $responslr-button-inactive-background-color;
	border-color: $responslr-button-inactive-text-color;
	color: $responslr-button-inactive-text-color;
	cursor: default;
}

@mixin responslr-button($name: $responslr-buttons-default, $height: null, $padding: null, $border-radius: null, $insert-default-styles: true) {
	@if $insert-default-styles {
		@include responslr-button-default();
	}

	$height: responslr-button-height($name) !default;
	$padding: responslr-button-padding($name) !default;
	$border-radius: responslr-button-border-radius($name) !default;

	@if $height == 0 {
		padding: $padding;
		white-space: pre-wrap;
	} @else {
		height: $height;
		padding: 0 responslr-split-shorthand($padding, right) 0 responslr-split-shorthand($padding, left);
		line-height: $height;
		white-space: nowrap;
	}

	@if $border-radius != 0 {
		border-radius: $border-radius;
	}
}


/***********************************************************************************
	CLASS GENERATOR
***********************************************************************************/

@function responslr-generate-buttons-check() {
	@return $responslr-generate-buttons and responslr-map-isnotempty($responslr-buttons);
}

@mixin responslr-generate-buttons() {
	%button {
		@include responslr-button-default();
	}

	@each $button-key, $button-list in $responslr-buttons {
		// Button normal
		.#{$responslr-button-class-prefix}#{$button-key} {
			@extend %button;

			@include responslr-button($name: $button-key, $insert-default-styles: false);
		}

		// Button inactive / disabled
		@if $responslr-generate-buttons-inactive {
			.#{$responslr-button-class-prefix}#{$button-key}[disabled] {
				@extend %button-inactive;
			}

			.#{$responslr-button-class-prefix}#{$button-key}#{$responslr-button-inactive-class-suffix} {
				@extend .#{$responslr-button-class-prefix}#{$button-key}[disabled];
				@extend .#{$responslr-button-class-prefix}#{$button-key};
			}
		}
	}

	%button-inactive {
		@include responslr-button-inactive();
	}
}

@if responslr-generate-buttons-check() {
	@include responslr-generate-buttons();
}