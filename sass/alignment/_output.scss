/***********************************************************************************
	OUTPUT - ALIGNMENT
***********************************************************************************/


/***********************************************************************************
	MIXINS
***********************************************************************************/

@mixin rr-alignment($alignment: left) {
	@if index(left right center, $alignment) {
		text-align: $alignment;
	} @else {
		vertical-align: $alignment;
	}
}


/***********************************************************************************
	CLASS GENERATOR
***********************************************************************************/

@function rr-generate-alignments-check() {
	@return $rr-generate-alignments;
}

@mixin rr-generate-alignments() {
	// Default Alignments
	.#{$rr-alignment-horizonal-left-class} {
		@include rr-alignment(left);
	}

	.#{$rr-alignment-horizonal-center-class} {
		@include rr-alignment(center);
	}

	.#{$rr-alignment-horizonal-right-class} {
		@include rr-alignment(right);
	}

	.#{$rr-alignment-vertical-top-class} {
		@include rr-alignment(top);
	}

	.#{$rr-alignment-vertical-middle-class} {
		@include rr-alignment(middle);
	}

	.#{$rr-alignment-vertical-bottom-class} {
		@include rr-alignment(bottom);
	}

	// Alignments for each breakpoint
	$breakpoint-iterator: 1;

	@each $breakpoint-key, $breakpoint-list in $rr-grid-breakpoints {
		@if $breakpoint-iterator == 1 {
			.#{$rr-alignment-horizonal-left-class}-#{$breakpoint-key} {
				@extend .#{$rr-alignment-horizonal-left-class};
			}

			.#{$rr-alignment-horizonal-center-class}-#{$breakpoint-key} {
				@extend .#{$rr-alignment-horizonal-center-class};
			}

			.#{$rr-alignment-horizonal-right-class}-#{$breakpoint-key} {
				@extend .#{$rr-alignment-horizonal-right-class};
			}

			.#{$rr-alignment-vertical-top-class}-#{$breakpoint-key} {
				@extend .#{$rr-alignment-vertical-top-class};
			}

			.#{$rr-alignment-vertical-middle-class}-#{$breakpoint-key} {
				@extend .#{$rr-alignment-vertical-middle-class};
			}

			.#{$rr-alignment-vertical-bottom-class}-#{$breakpoint-key} {
				@extend .#{$rr-alignment-vertical-bottom-class};
			}
		} @else {
			@include rr-media-query($breakpoint-key) {
				.#{$rr-alignment-horizonal-left-class}-#{$breakpoint-key} {
					@include rr-alignment(left);
				}

				.#{$rr-alignment-horizonal-center-class}-#{$breakpoint-key} {
					@include rr-alignment(center);
				}

				.#{$rr-alignment-horizonal-right-class}-#{$breakpoint-key} {
					@include rr-alignment(right);
				}

				.#{$rr-alignment-vertical-top-class}-#{$breakpoint-key} {
					@include rr-alignment(top);
				}

				.#{$rr-alignment-vertical-middle-class}-#{$breakpoint-key} {
					@include rr-alignment(middle);
				}

				.#{$rr-alignment-vertical-bottom-class}-#{$breakpoint-key} {
					@include rr-alignment(bottom);
				}
			}
		}

		$breakpoint-iterator: $breakpoint-iterator + 1;
	}
}

@if rr-generate-alignments-check() {
	@include rr-generate-alignments();
}