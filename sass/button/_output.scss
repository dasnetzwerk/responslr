/***********************************************************************************
	OUTPUT - BUTTON
***********************************************************************************/


/***********************************************************************************
	DEFAULT MAP FUNCTIONS
***********************************************************************************/

@function rr-button-exists($name) {
	@return map-has-key($rr-buttons, $name);
}

@function rr-button($name: null) {
	$return-button: ();

	@if $name == null {
		$name: $rr-buttons-default;
	}

	@if rr-button-exists($name) {
		$return-button: map-get($rr-buttons, $name);
	}

	@return $return-button;
}


/***********************************************************************************
	MAP VALUE FUNCTIONS
***********************************************************************************/

@function rr-button-height($name: null) {
	$return-height: map-get(rr-button($name), height);

	@if $return-height == null {
		$return-height: $rr-buttons-default-height;
	}

	@return $return-height;
}

@function rr-button-padding($name: null) {
	$return-padding: map-get(rr-button($name), padding);

	@if $return-padding == null {
		$return-padding: $rr-buttons-default-padding;
	}

	@return $return-padding;
}

@function rr-button-font-family($name: null) {
	$return-font-family: map-get(rr-button($name), font-family);

	@if $return-font-family == null {
		$return-font-family: $rr-buttons-default-font-family;
	}

	@return $return-font-family;
}

@function rr-button-font-size($name: null) {
	$return-font-size: map-get(rr-button($name), font-size);

	@if $return-font-size == null {
		$return-font-size: $rr-buttons-default-font-size;
	}

	@return $return-font-size;
}

@function rr-button-font-weight($name: null) {
	$return-font-weight: map-get(rr-button($name), font-weight);

	@if $return-font-weight == null {
		$return-font-weight: $rr-buttons-default-font-weight;
	}

	@return $return-font-weight;
}

@function rr-button-text-color($name: null) {
	$return-text-color: map-get(rr-button($name), text-color);

	@if $return-text-color == null {
		$return-text-color: $rr-buttons-default-text-color;
	}

	@return $return-text-color;
}

@function rr-button-text-color-hover($name: null) {
	$return-text-color-hover: map-get(rr-button($name), text-color-hover);

	@if $return-text-color-hover == null {
		$return-text-color-hover: $rr-buttons-default-text-color-hover;
	}

	@return $return-text-color-hover;
}

@function rr-button-border-radius($name: null) {
	$return-border-radius: map-get(rr-button($name), border-radius);

	@if $return-border-radius == null {
		$return-border-radius: $rr-buttons-default-border-radius;
	}

	@return $return-border-radius;
}

@function rr-button-border($name: null) {
	$return-border: map-get(rr-button($name), border);

	@if $return-border == null {
		$return-border: $rr-buttons-default-border;
	}

	@return $return-border;
}

@function rr-button-border-hover($name: null) {
	$return-border-hover: map-get(rr-button($name), border-hover);

	@if $return-border-hover == null {
		$return-border-hover: $rr-buttons-default-border-hover;
	}

	@return $return-border-hover;
}

@function rr-button-bg-color($name: null) {
	$return-bg-color: map-get(rr-button($name), bg-color);

	@if $return-bg-color == null {
		$return-bg-color: $rr-buttons-default-bg-color;
	}

	@return $return-bg-color;
}

@function rr-button-bg-color-hover($name: null) {
	$return-bg-color-hover: map-get(rr-button($name), bg-color-hover);

	@if $return-bg-color-hover == null {
		$return-bg-color-hover: $rr-buttons-default-bg-color-hover;
	}

	@return $return-bg-color-hover;
}


/***********************************************************************************
	MIXINS
***********************************************************************************/

@mixin rr-button-default() {
	display: inline-block;
	cursor: pointer;
	white-space: nowrap;
}

@mixin rr-button-inactive() {
	background-color: $rr-button-inactive-background-color;
	border-color: $rr-button-inactive-text-color;
	color: $rr-button-inactive-text-color;
	cursor: default;
}

@mixin rr-button(
	$name: $rr-buttons-default,

	$height: null,
	$padding: null,

	$font-family: null,
	$font-size: null,
	$font-weight: null,

	$text-color: null,
	$text-color-hover: null,

	$border-radius: null,
	$border: null,
	$border-hover: null,

	$bg-color: null,
	$bg-color-hover: null,

	$insert-default-styles: true
) {
	@if $insert-default-styles {
		@include rr-button-default();
	}

	$height: rr-button-height($name) !default;
	$padding: rr-button-padding($name) !default;

	$font-family: rr-button-font-family($name) !default;
	$font-size: rr-button-font-size($name) !default;
	$font-weight: rr-button-font-weight($name) !default;

	$text-color: rr-button-text-color($name) !default;
	$text-color-hover: rr-button-text-color-hover($name) !default;

	$border-radius: rr-button-border-radius($name) !default;
	$border: rr-button-border($name) !default;
	$border-hover: rr-button-border-hover($name) !default;

	$bg-color: rr-button-bg-color($name) !default;
	$bg-color-hover: rr-button-bg-color-hover($name) !default;

	@if $font-family != null {
		@if rr-typo-family-exists($font-family) {
			@include rr-typo-family($font-family);
		} @else {
			font-family: $font-family;
		}
	}

	@if $font-size != null {
		@if rr-typo-size-exists($font-size) {
			@include rr-typo-size($font-size);
		} @else {
			font-size: $font-size;
		}
	}

	@if $font-weight != null {
		font-weight: $font-weight;
	}

	@if $height == 0 {
		padding: $padding;
		white-space: pre-wrap;
	} @else {
		height: $height;
		padding: 0 rr-split-shorthand($padding, right) 0 rr-split-shorthand($padding, left);
		line-height: $height;
	}

	@if $text-color != null {
		color: $text-color;
	}

	@if $border-radius != null {
		border-radius: $border-radius;
	}

	@if $border != null {
		border: $border;
	}

	@if $bg-color != null {
		background-color: $bg-color;
	}

	&:hover,
	&:focus {
		@if $text-color-hover != null and $text-color-hover != $text-color {
			color: $text-color-hover;
		}

		@if $border-hover != null and $border-hover != $border {
			border: $border-hover;
		}

		@if $bg-color-hover != null and $bg-color-hover != $bg-color {
			background-color: $bg-color-hover;
		}
	}
}


/***********************************************************************************
	CLASS GENERATOR
***********************************************************************************/

@function rr-generate-buttons-check() {
	@return $rr-generate-buttons and rr-map-isnotempty($rr-buttons);
}

@mixin rr-generate-buttons() {
	%button {
		@include rr-button-default();
	}

	@each $button-key, $button-list in $rr-buttons {
		// Button normal
		.#{$rr-button-class-prefix}#{$button-key} {
			@extend %button;

			@include rr-button($name: $button-key, $insert-default-styles: false);
		}

		// Button inactive / disabled
		@if $rr-generate-buttons-inactive {
			.#{$rr-button-inactive-class}:hover,
			.#{$rr-button-inactive-class}:focus,
			.#{$rr-button-class-prefix}#{$button-key}[disabled] {
				@extend .#{$rr-button-inactive-class};
			}
		}
	}

	.#{$rr-button-inactive-class} {
		@include rr-button-inactive();
	}
}

@if rr-generate-buttons-check() {
	@include rr-generate-buttons();
}