/***********************************************************************************
	OUTPUT - SPACING
***********************************************************************************/


/***********************************************************************************
	FUNCTIONS
***********************************************************************************/

@function responslr-spacing-size($spacing-name: default) {
	@each $spacing-size-list in $responslr-spacings {
		@if nth($spacing-size-list,1) == $spacing-name {
			@return nth($spacing-size-list,2);
		}
	}
	@return 0;
}


/***********************************************************************************
	MIXINS
***********************************************************************************/

@mixin responslr-spacing(
	$spacing-size-top: null,
	$spacing-size-right: null,
	$spacing-size-bottom: null,
	$spacing-size-left: null,
	$property: margin
) {
	@if($spacing-size-top) {
		#{$property}-top: $spacing-size-top;
	}
	@if($spacing-size-right) {
		#{$property}-right: $spacing-size-right;
	}
	@if($spacing-size-bottom) {
		#{$property}-bottom: $spacing-size-bottom;
	}
	@if($spacing-size-left) {
		#{$property}-left: $spacing-size-left;
	}
}

// Apply leading whitespace as margin.
@mixin responslr-spacing-top($spacing-size: default) {
	@if type-of($spacing-size) == string {
		$spacing-size: responslr-spacing-size($spacing-size);
	}
	@include responslr-spacing($spacing-size-top: $spacing-size);
}

// Apply trailing whitespace as margin.
@mixin responslr-spacing-bottom($spacing-size: default) {
	@if type-of($spacing-size) == string {
		$spacing-size: responslr-spacing-size($spacing-size);
	}
	@include responslr-spacing($spacing-size-bottom: $spacing-size);
}


/***********************************************************************************
	CLASS GENERATOR
***********************************************************************************/

@mixin responslr-generate-spacings() {
	@each $spacing-size-list in $responslr-spacings {
		.spacing-top-#{nth($spacing-size-list,1)} {
			@include responslr-spacing-top(nth($spacing-size-list,2));
		}

		.spacing-bottom-#{nth($spacing-size-list,1)} {
			@include responslr-spacing-bottom(nth($spacing-size-list,2));
		}
	}
}

@if $responslr-generate-spacings {
	@include responslr-generate-spacings();
}