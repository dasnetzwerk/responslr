/***********************************************************************************
	FUNCTION: COLOR
***********************************************************************************/
@function color($color: black) {
	$return-color: black;

	@each $current-color in $colors {
		@if nth($current-color,1) == $color {
			$return-color: nth($current-color,2);
		}
	}

	@if type-of($return-color) != color {
		$return-color: black;
	}

	@return $return-color;
}

@function color-name($color: black) {
	$return-color: nth($color,1);

	@return $return-color;
}

@function color-value($color: black) {
	$return-color: nth($color,2);

	@if type-of($return-color) != color {
		$return-color: black;
	}

	@return $return-color;
}


/***********************************************************************************
	MIXINS: COLOR
***********************************************************************************/
@mixin bg-color($color: white) {
	background-color: color($color);
}

@mixin text-color($color: black) {
	color: color($color);
}

@mixin border-color($color: black, $property: border) {
	#{$property}-color: color($color);
}

@mixin color($color: black, $type: text-color) {
	// Text Color
	@if $type == text-color {
		@include text-color($color);
	}

	// Background Color
	@if $type == bg-color {
		@include bg-color($color);
	}

	// Border Color
	$border-types: border,border-top,border-right,border-bottom,border-left;
	@if index($border-types, $type) {
		@include border-color($color, $type);
	}
}

/***********************************************************************************
	CLASS GENERATOR: COLOR
***********************************************************************************/
@mixin generate-color() {
	@each $color in $colors {
		$generate-color-name: color-name($color);
		$generate-color-value: color-value($color);

		// background-color
		@if $enable-module-color-bg {
			.bg-#{$generate-color-name} {
				@include bg-color($generate-color-name);
			}

			@if $enable-module-color-bg-hover {
				.bg-hover-#{$generate-color-name}:hover {
					@extend .bg-#{$generate-color-name};
				}
			}

			@if $enable-module-color-bg-focus {
				.bg-focus-#{$generate-color-name}:focus {
					@extend .bg-#{$generate-color-name};
				}
			}
		}

		// text-color
		@if $enable-module-color-text {
			.text-#{$generate-color-name} {
				@include text-color($generate-color-name);
			}

			@if $enable-module-color-text-hover {
				.text-hover-#{$generate-color-name}:hover {
					@extend .text-#{$generate-color-name};
				}
			}

			@if $enable-module-color-text-focus {
				.text-focus-#{$generate-color-name}:focus {
					@extend .text-#{$generate-color-name};
				}
			}
		}

		// border-color
		@if $enable-module-color-border {
			.border-#{$generate-color-name} {
				@include border-color($generate-color-name);
			}

			@if $enable-module-color-border-hover {
				.border-hover-#{$generate-color-name}:hover {
					@extend .border-#{$generate-color-name};
				}
			}

			@if $enable-module-color-border-focus {
				.border-focus-#{$generate-color-name}:focus {
					@extend .border-#{$generate-color-name};
				}
			}
		}

		// border-color-directions
		@if $enable-module-color-border-directions {
			.border-top-#{$generate-color-name} {
				@include border-color($color: $generate-color-name,$property: border-top);
			}

			.border-right-#{$generate-color-name} {
				@include border-color($color: $generate-color-name,$property: border-right);
			}

			.border-bottom-#{$generate-color-name} {
				@include border-color($color: $generate-color-name,$property: border-bottom);
			}

			.border-left-#{$generate-color-name} {
				@include border-color($color: $generate-color-name,$property: border-left);
			}

			@if $enable-module-color-border-directions-hover {
				.border-top-hover-#{$generate-color-name}:hover {
					@extend .border-top-#{$generate-color-name};
				}

				.border-right-hover-#{$generate-color-name}:hover {
					@extend .border-right-#{$generate-color-name};
				}

				.border-bottom-hover-#{$generate-color-name}:hover {
					@extend .border-bottom-#{$generate-color-name};
				}

				.border-left-hover-#{$generate-color-name}:hover {
					@extend .border-left-#{$generate-color-name};
				}
			}

			@if $enable-module-color-border-directions-focus {
				.border-top-focus-#{$generate-color-name}:focus {
					@extend .border-top-#{$generate-color-name};
				}

				.border-right-focus-#{$generate-color-name}:focus {
					@extend .border-right-#{$generate-color-name};
				}

				.border-bottom-focus-#{$generate-color-name}:focus {
					@extend .border-bottom-#{$generate-color-name};
				}

				.border-left-focus-#{$generate-color-name}:focus {
					@extend .border-left-#{$generate-color-name};
				}
			}
		}
	}
}

@if $enable-module-color {
	@include generate-color();
}
