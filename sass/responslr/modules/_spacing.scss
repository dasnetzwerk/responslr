/***********************************************************************************
	FUNCTION: SPACING
***********************************************************************************/
@function spacer-size($spacer-name: default) {
	@each $spacer-size-list in $spacer-sizes {
		@if nth($spacer-size-list,1) == $spacer-name {
			@return nth($spacer-size-list,2);
		}
	}
	@return 0;
}

/***********************************************************************************
	MIXIN: SPACING
***********************************************************************************/
// TODO: @mixin spacing()
@mixin spacing($where: 'bottom', $value: 0) {
	margin-#{$where}: 0;
	// TODO bottom, top, both
}

@mixin spacer(
	$spacer-size-top: null,
	$spacer-size-right: null,
	$spacer-size-bottom: null,
	$spacer-size-left: null,
	$property: margin
) {
	@if($spacer-size-top) {
		#{$property}-top: $spacer-size-top;
	}
	@if($spacer-size-right) {
		#{$property}-right: $spacer-size-right;
	}
	@if($spacer-size-bottom) {
		#{$property}-bottom: $spacer-size-bottom;
	}
	@if($spacer-size-left) {
		#{$property}-left: $spacer-size-left;
	}
}

// Apply leading whitespace as margin.
@mixin spacer-top($spacer-size: default) {
	@if type-of($spacer-size) == string {
		$spacer-size: spacer-size($spacer-size);
	}
	@include spacer($spacer-size-top: $spacer-size);
}

// Apply trailing whitespace as margin.
@mixin spacer-bottom($spacer-size: default) {
	@if type-of($spacer-size) == string {
		$spacer-size: spacer-size($spacer-size);
	}
	@include spacer($spacer-size-bottom: $spacer-size);
}

/***********************************************************************************
	CLASS GENERATOR: SPACING
	generates .spacer-top-[spacer-name] and .spacer-bottom-[spacer-name] with defined spacer-size
***********************************************************************************/
@if $enable-module-classes-spacing {
	@each $spacer-size-list in $spacer-sizes {
		.spacer-top-#{nth($spacer-size-list,1)} {
			@include spacer-top(nth($spacer-size-list,2));
		}

		.spacer-bottom-#{nth($spacer-size-list,1)} {
			@include spacer-bottom(nth($spacer-size-list,2));
		}
	}
}