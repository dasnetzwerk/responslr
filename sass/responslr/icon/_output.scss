/***********************************************************************************
	OUTPUT - ICON
***********************************************************************************/


/***********************************************************************************
	DEFAULT MAP FUNCTIONS
***********************************************************************************/

@function responslr-icon-exists($name) {
	@return map-has-key($responslr-icons, $name);
}

@function responslr-icon($name: null) {
	$return-icon: ();

	@if $name == null {
		$name: $responslr-icons-default;
	}

	@if responslr-icon-exists($name) {
		$return-icon: map-get($responslr-icons, $name);
	}

	@return $return-icon;
}


/***********************************************************************************
	MAP VALUE FUNCTIONS
***********************************************************************************/

@function responslr-icon-file($name: null) {
	$return-file: map-get(responslr-icon($name), file);

	@return $return-file;
}

@function responslr-icon-size($name: null) {
	$return-size: map-get(responslr-icon($name), size);

	@if $return-size == null {
		$return-size: 'auto';
	}

	@return $return-size;
}

@function responslr-icon-offset-x($name: null) {
	$return-offset-x: map-get(responslr-icon($name), offset-x);

	@if $return-offset-x == null {
		$return-offset-x: 50%;
	}

	@return $return-offset-x;
}

@function responslr-icon-offset-y($name: null) {
	$return-offset-y: map-get(responslr-icon($name), offset-y);

	@if $return-offset-y == null {
		$return-offset-y: 50%;
	}

	@return $return-offset-y;
}

@function responslr-icon-color($name: null) {
	$return-color: map-get(responslr-icon($name), color);

	@return $return-color;
}


/***********************************************************************************
	EXTENDED FUNCTIONS
***********************************************************************************/

@function responslr-icon-url($name: null, $color: null) {
	@if $color == null {
		$color: responslr-icon-color($name);
	}

	@if responslr-color-exists($color) {
		$color: responslr-color($color);
	}

	$return-url: inline-svg(responslr-icon-file($name), $color);

	@return $return-url;
}


/***********************************************************************************
	MIXINS
***********************************************************************************/

@mixin responslr-icon($name: null, $size: null, $offset-x: null, $offset-y: null, $color: null) {
	background-image: responslr-icon-url($name, $color);
	background-repeat: no-repeat;

	@include responslr-icon-position($name, $offset-x, $offset-y);
	@include responslr-icon-size($name, $size);
}

@mixin responslr-icon-size($name: null, $size: null) {
	@if $size == null {
		$size: responslr-icon-size($name);
	}

	background-size: unquote($size);
}

@mixin responslr-icon-position($name: null, $offset-x: null, $offset-y: null) {
	@if $offset-x == null {
		$offset-x: responslr-icon-offset-x($name);
	}

	@if $offset-y == null {
		$offset-y: responslr-icon-offset-y($name);
	}

	background-position: $offset-x $offset-y;
}


/***********************************************************************************
	CLASS GENERATOR
***********************************************************************************/

@function responslr-generate-icons-check() {
	@return $responslr-generate-icons && responslr-map-isnotempty($responslr-icons);
}

@mixin responslr-generate-icons() {
	@each $icon-key, $icon-list in $responslr-icons {
		.#{$responslr-icon-class-prefix}#{$icon-key} {
			@include responslr-icon($icon-key);
		}
	}
}

@if responslr-generate-icons-check() {
	@include responslr-generate-icons();
}