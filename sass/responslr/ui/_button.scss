/***********************************************************************************
	UI - BUTTON
***********************************************************************************/

/***********************************************************************************
	FUNCTION: BUTTON
***********************************************************************************/
@function responslr-button($name: $button-styles-default) {
	@each $button in $button-styles {
		@if nth($button,1) == $name {
			@return $button;
		}
	}
	@return null;
}

@function responslr-button-height($name: $button-styles-default) {
	$return-height: nth(responslr-button($name),2);

	@return $return-height;
}

@function responslr-button-padding-x($name: $button-styles-default) {
	$return-padding-x: nth(responslr-button($name),3);

	@return $return-padding-x;
}

@function responslr-button-padding-y($name: $button-styles-default) {
	$return-padding-y: nth(responslr-button($name),4);

	@return $return-padding-y;
}

@function responslr-button-font-size($name: $button-styles-default) {
	$return-font-size: nth(responslr-button($name),5);

	@return $return-font-size;
}

@function responslr-button-border-radius($name: $button-styles-default) {
	$return-border-radius: nth(responslr-button($name),6);

	@return $return-border-radius;
}


/***********************************************************************************
	MIXIN: BUTTON
***********************************************************************************/
@mixin responslr-button-default() {
	display: inline-block;
	cursor: pointer;

	@if($button-transitions != '') {
		@include transition-default($button-transitions);
	}
}

@mixin responslr-button-inactive() {
	background-color: $button-inactive-background-color;
	border-color: $button-inactive-text-color;
	color: $button-inactive-text-color;
	cursor: default;
}

@mixin responslr-button($name: $button-styles-default, $insert-default-styles:true) {
	@if $insert-default-styles {
		@include responslr-button-default();
	}

	@if(responslr-button-height($name) == 0) {
		padding: responslr-button-padding-y($name) responslr-button-padding-x($name);
		white-space: pre-wrap;

		@include typo($font-size: responslr-button-font-size($name), $line-height: responslr-button-font-size($name));
	} @else {
		height: responslr-button-height($name);
		padding: 0 responslr-button-padding-x($name);
		line-height: responslr-button-height($name);
		white-space: nowrap;

		@include typo($font-size: responslr-button-font-size($name), $line-height: responslr-button-height($name));
	}

	@if(responslr-button-border-radius($name) != 0) {
		@include border-radius(responslr-button-border-radius($name));
	}
}


/***********************************************************************************
	CLASS GENERATOR: BUTTON
***********************************************************************************/
@mixin responslr-generate-button() {
	%button {
		@include responslr-button-default();
	}

	@each $button in $button-styles {
		$button-name: nth($button,1);

		.button-#{$button-name} {
			@extend %button;

			@include responslr-button($name: $button-name, $insert-default-styles: false);
		}

		.button-#{$button-name}-inactive {
			@extend .button-#{$button-name};
			@extend %button-inactive;
		}
	}

	%button-inactive {
		@include responslr-button-inactive();
	}
}

@if $enable-ui-button {
	@include responslr-generate-button();
}