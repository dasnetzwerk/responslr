/***********************************************************************************
	OUTPUT - ALIGNMENT
***********************************************************************************/


/***********************************************************************************
	MIXINS
***********************************************************************************/

@mixin responslr-alignment($alignment) {
	@if index(left right center, $alignment) {
		text-align: $alignment;
	} @else {
		vertical-align: $alignment;
	}
}

/***********************************************************************************
	CLASS GENERATOR
***********************************************************************************/

@mixin responslr-generate-alignments() {
	// Default Alignments
	.h-left {
		@include responslr-alignment(left);
	}

	.h-center {
		@include responslr-alignment(center);
	}

	.h-right {
		@include responslr-alignment(right);
	}

	.v-top {
		@include responslr-alignment(top);
	}

	.v-middle {
		@include responslr-alignment(middle);
	}

	.v-bottom {
		@include responslr-alignment(bottom);
	}

	// Alignments for each breakpoint
	@each $current-breakpoint-list in $responslr-grid-breakpoints {
		$current-breakpoint-name: nth($current-breakpoint-list,1);

		@include responslr-media-query($media-end: $current-breakpoint-name, $media-start: $current-breakpoint-name) {
			.h-left-#{$current-breakpoint-name} {
				@include responslr-alignment(left);
			}

			.h-center-#{$current-breakpoint-name} {
				@include responslr-alignment(center);
			}

			.h-right-#{$current-breakpoint-name} {
				@include responslr-alignment(right);
			}

			.v-top-#{$current-breakpoint-name} {
				@include responslr-alignment(top);
			}

			.v-middle-#{$current-breakpoint-name} {
				@include responslr-alignment(middle);
			}

			.v-bottom-#{$current-breakpoint-name} {
				@include responslr-alignment(bottom);
			}
		}
	}
}

@if $responslr-generate-alignments {
	@include responslr-generate-alignments();
}