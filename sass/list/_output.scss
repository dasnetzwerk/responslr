/***********************************************************************************
	OUTPUT - LIST
***********************************************************************************/



/***********************************************************************************
	DEFAULT MAP FUNCTIONS
***********************************************************************************/

@function rr-list-exists($name) {
	@return map-has-key($rr-lists, $name);
}

@function rr-list($name: null) {
	$return-list: ();

	@if $name == null {
		$name: $rr-lists-default;
	}

	@if rr-list-exists($name) {
		$return-list: map-get($rr-lists, $name);
	}

	@return $return-list;
}


/***********************************************************************************
	MAP VALUE FUNCTIONS
***********************************************************************************/

@function rr-list-type($name: null) {
	$return-type: map-get(rr-list($name), type);

	@if $return-type == null {
		$return-type: $rr-lists-default-type;
	}

	@return $return-type;
}

@function rr-list-bullet-type($name: null) {
	$return-bullet-type: map-get(rr-list($name), bullet-type);

	@if $return-bullet-type == null {
		$return-bullet-type: $rr-lists-default-bullet-type;
	}

	@return $return-bullet-type;
}

@function rr-list-bullet-custom($name: null) {
	$return-bullet-custom: map-get(rr-list($name), bullet-custom);

	@if $return-bullet-custom == null {
		$return-bullet-custom: $rr-lists-default-bullet-custom;
	}

	@return $return-bullet-custom;
}

@function rr-list-bullet-position($name: null) {
	$return-bullet-position: map-get(rr-list($name), bullet-position);

	@if $return-bullet-position == null {
		$return-bullet-position: $rr-lists-default-bullet-position;
	}

	@return $return-bullet-position;
}

@function rr-list-bullet-width($name: null) {
	$return-bullet-width: map-get(rr-list($name), bullet-width);

	@if $return-bullet-width == null {
		$return-bullet-width: $rr-lists-default-bullet-width;
	}

	@return $return-bullet-width;
}

@function rr-list-bullet-height($name: null) {
	$return-bullet-height: map-get(rr-list($name), bullet-height);

	@if $return-bullet-height == null {
		$return-bullet-height: $rr-lists-default-bullet-height;
	}

	@return $return-bullet-height;
}

@function rr-list-bullet-margin($name: null) {
	$return-bullet-margin: map-get(rr-list($name), bullet-margin);

	@if $return-bullet-margin == null {
		$return-bullet-margin: $rr-lists-default-bullet-margin;
	}

	@return $return-bullet-margin;
}

@function rr-list-bullet-color($name: null) {
	$return-bullet-color: map-get(rr-list($name), bullet-color);

	@if $return-bullet-color == null {
		$return-bullet-color: $rr-lists-default-bullet-color;
	}

	@return $return-bullet-color;
}

@function rr-list-bullet-icon($name: null) {
	$return-bullet-icon: map-get(rr-list($name), bullet-icon);

	@if $return-bullet-icon == null {
		$return-bullet-icon: $rr-lists-default-bullet-icon;
	}

	@return $return-bullet-icon;
}

@function rr-list-item-padding($name: null) {
	$return-item-padding: map-get(rr-list($name), item-padding);

	@if $return-item-padding == null {
		$return-item-padding: $rr-lists-default-item-padding;
	}

	@return $return-item-padding;
}

@function rr-list-item-margin($name: null) {
	$return-item-margin: map-get(rr-list($name), item-margin);

	@if $return-item-margin == null {
		$return-item-margin: $rr-lists-default-item-margin;
	}

	@return $return-item-margin;
}

// TODO: Bullet types arrow and sprite

// TODO: list-padding
// TODO: list-margin
// TODO: item-padding-first: 10px 30px,
// TODO: item-padding-last: 10px 30px,
// TODO: item-margin-first: 0 5px 5px 0,
// TODO: item-margin-last: 0 5px 5px 0,
// TODO: bullet-font-family: 'times-new-roman',
// TODO: bullet-font-size: 10px,
// TODO: bullet-line-height: 10px,


/***********************************************************************************
	EXTENDED FUNCTIONS
***********************************************************************************/


/***********************************************************************************
	MIXINS
***********************************************************************************/

@mixin rr-list-default() {
	font-size: 0;
	line-height: 0;

	& > * {
		position: relative;
		display: block;

		@include rr-typo();
	}
}

@mixin rr-list($name: $rr-lists-default, $type: null, $bullet-type: null, $bullet-custom: null, $bullet-position: null, $bullet-width: null, $bullet-height: null, $bullet-margin: null, $bullet-color: null, $bullet-icon: null, $item-padding: null, $item-margin: null, $is-generator: false) {
	$type:  rr-list-type($name) !default;
	$bullet-type: rr-list-bullet-type($name) !default;
	$bullet-custom: rr-list-bullet-custom($name) !default;
	$bullet-position: rr-list-bullet-position($name) !default;
	$bullet-width: rr-list-bullet-width($name) !default;
	$bullet-height: rr-list-bullet-height($name) !default;
	$bullet-margin: rr-list-bullet-margin($name) !default;
	$bullet-color: rr-list-bullet-color($name) !default;
	$bullet-icon: rr-list-bullet-icon($name) !default;
	$item-padding: rr-list-item-padding($name) !default;
	$item-margin: rr-list-item-margin($name) !default;

	@if($is-generator == false) {
		@include rr-list-default();
	}

	& > * {
		@if $type == horizontal {
			display: inline-block;
		}

		padding: $item-padding;
		margin: $item-margin;

		@if $bullet-type != none {
			$bullet-margin-left: rr-split-shorthand($bullet-margin, 'left');
			$bullet-margin-right: rr-split-shorthand($bullet-margin, 'right');

			$item-margin-left: rr-split-shorthand($item-margin, 'left');
			$item-margin-right: rr-split-shorthand($item-margin, 'right');

			$item-padding-left: rr-split-shorthand($item-padding, 'left');

			$item-margin-left: $item-margin-left + $bullet-margin-left + $bullet-margin-right;
			$item-margin-right: $item-margin-right + $bullet-margin-left + $bullet-margin-right;

			&:not(.#{$rr-list-no-bullet-class})::#{$rr-list-pseudo-element} {
				position: absolute;
				width: $bullet-width;

				@if $bullet-height != auto {
					height: $bullet-height;
				}

				@if $bullet-type == 'custom' {
					content: $bullet-custom;

					@if $bullet-color != null {
						color: rr-color-value($bullet-color);
					}

					@if index(between-before between-after, $bullet-position) {
						text-align: center;
					} @else {
						text-align: left;
					}
				} @else {
					content: '';

					@if $bullet-type == 'circle' {
						@include rr-circle($width: $bullet-width, $height: $bullet-height, $radius: 50%);
					}

					@if $bullet-type == 'triangle' {
						@include rr-triangle($direction: right, $width: $bullet-width, $height: auto, $color: $bullet-color);
					}

					@if $bullet-type == 'icon' {
						@if rr-icon-exists($bullet-icon) {
							@include rr-icon($name: $bullet-icon, $size: '#{$bullet-width} auto', $offset-x: null, $offset-y: null, $color: $bullet-color, $repeat: no-repeat);
						} @else {
							@include rr-icon($file: $bullet-icon, $size: '#{$bullet-width} auto', $offset-x: null, $offset-y: null, $color: $bullet-color, $repeat: no-repeat);
						}
					}

					@if $bullet-height == auto {
						height: $bullet-width;
					}
				}

				@if $bullet-position == 'inside' {
					left: $item-padding-left + $bullet-margin-left;
				} @else {
					@if $bullet-position == 'between-after' {
						left: 100%;
					} @else {
						right: 100%;
					}
				}

				margin: $bullet-margin;
			}

			@if $bullet-position == 'between-before' {
				&:not(.#{$rr-list-no-bullet-class}):not(:first-child) {
					margin-left: $item-margin-left + $bullet-width;
				}

				&:first-child::#{$rr-list-pseudo-element} {
					display: none;
				}
			} @else if $bullet-position == 'between-after' {
				&:not(.#{$rr-list-no-bullet-class}):not(:last-child) {
					margin-right: $item-margin-right + $bullet-width;
				}

				&:last-child::#{$rr-list-pseudo-element} {
					display: none;
				}
			} @else if $bullet-position == 'outside' {
				margin-left: $item-margin-left + $bullet-width;
			} @else {
				padding-left: $item-padding-left + $bullet-width + $bullet-margin-left + $bullet-margin-right;
			}
		}
	}
}

/***********************************************************************************
	CLASS GENERATOR
***********************************************************************************/

@function rr-generate-lists-check() {
	@return $rr-generate-lists and rr-map-isnotempty($rr-lists);
}

@mixin rr-generate-lists() {
	%list {
		@include rr-list-default();
	}

	@each $list-key, $list-list in $rr-lists {
		.#{$rr-list-class-prefix}#{$list-key} {
			@extend %list;

			@include rr-list($name: $list-key, $is-generator: true);
		}
	}
}

@if rr-generate-lists-check() {
	@include rr-generate-lists();
}
